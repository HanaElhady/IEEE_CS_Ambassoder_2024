# Create a program that finds (min,max,mean,mode,median,range,variance,STD)
# -program will take a list of numbers and finds the above requirements 
# -your program should contain 9 functions for each requirement
# -Do not use built-in functions
# -Make sure you handle Errors 

# Your program :
# def get_numbers() that takes list from user
# def find_min(numbers)returns min
# def find_max(numbers)returns max
# def find_mean(numbers) returns mean
# def find_mode(numbers) returns mode
# def find_median(numbers)returns median
# def find_range(numbers)returns range
# def find_variance(numbers)returns variance
# def find_STD(numbers)returns STD

# INPUT

# [12, 18, 7, 10, 16, 14, 11, 8, 12, 15]

# OUTPUT

# Min: 7
# Max: 18
# Mean: 12.3
# Mode: [12]
# Median: 12.0
# Range: 11
# Variance: 11.61
# Standard Deviation: 3.40961
# ro")

def get_numbers():
    while True:
        user_input = input("Enter numbers separated by spaces: ")
        try:
            numbers = list(map(float, user_input.split()))
            if len(numbers) == 0:
                raise ValueError("The list is empty.")
            return numbers
        except ValueError:
            print("Invalid input. Please enter valid numbers separated by spaces.")

def find_min(numbers):
    min_val = numbers[0]
    for i in range(1, len(numbers)):
        if min_val > numbers[i]:
            min_val = numbers[i]
    return min_val

def find_max(numbers):
    max_val = numbers[0]
    for i in range(1, len(numbers)):
        if max_val < numbers[i]:
            max_val = numbers[i]
    return max_val

def find_mean(numbers):
    totalSum = sum(numbers)
    return totalSum / len(numbers)

def find_mode(numbers):
    frequency = {}
    for num in numbers:
        if num in frequency:
            frequency[num] += 1
        else:
            frequency[num] = 1
    
    max_freq = max(frequency.values())
    mode = [num for num, freq in frequency.items() if freq == max_freq]

    if max_freq == 1:
        mode = []
    
    return mode

def find_median(numbers):
    sorted_numbers = sorted(numbers)
    count = len(sorted_numbers)
    if count % 2 == 1:
        return sorted_numbers[count // 2]
    else:
        mid1 = count // 2
        mid2 = mid1 - 1
        return (sorted_numbers[mid1] + sorted_numbers[mid2]) / 2

def find_range(numbers):
    return find_max(numbers) - find_min(numbers)

def find_variance(numbers):
    diff = [ (num - find_mean(numbers)) ** 2 for num in numbers]
    return sum(diff) / len(numbers) 

def find_STD(numbers) :
    return find_variance(numbers) ** 0.5 

def main():
  
    numbersList = get_numbers()
    min = find_min(numbersList)
    print(f"Min: {min}")
    max = find_max(numbersList)
    print(f"Max: {max}")
    mean = find_mean(numbersList)
    print(f"Mean: {mean}")
    mode = find_mode(numbersList)
    print(f"Mode: {mode}")
    median = find_median(numbersList)
    print(f"Median: {median}")
    range = find_range(numbersList)
    print(f"Range: {range}")
    variance = round(find_variance(numbersList) , 2)
    print(f"Variance: {variance}")
    std = round(find_STD(numbersList) , 2)
    print(f"Standard Deviation: {std}")

if __name__ == "__main__":
    main()
    
