// https://leetcode.com/problems/replace-elements-with-greatest-element-on-right-side/submissions/1340609343/
// Replace elements with greatest element on right side
import java.io.*;
import java.util.*;

public class Solution {
    public static int[] replaceElements(int[] arr) {
        int maxRight = -1;

        for (int i = arr.length - 1; i >= 0; i--) {

            int currentElement = arr[i];

            arr[i] = maxRight;

            maxRight = Math.max(maxRight, currentElement);
        }
        return arr;
    }

    public static void main(String[] args) throws IOException {
        Reader reader = new Reader();

        System.out.println("Type size of the array: ");
        int size = reader.nextInt();
        int[] arr = new int[size];

        for(int k = 0 ; k < size ; k ++ ) {
            arr[k] = reader.nextInt();
        }
        replaceElements(arr);
        for(int k = 0 ; k < size ; k ++ ) {
            System.out.print(arr[k] +" ");
        }


    }

    static class Reader {
        private BufferedReader reader;
        private StringTokenizer tokenizer;

        public Reader() {
            reader = new BufferedReader(new InputStreamReader(System.in));
        }

        public String next() throws IOException {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                tokenizer = new StringTokenizer(reader.readLine());
            }
            return tokenizer.nextToken();
        }

        public int nextInt() throws IOException {
            return Integer.parseInt(next());
        }

        public long nextLong() throws IOException {
            return Long.parseLong(next());
        }
    }
}

